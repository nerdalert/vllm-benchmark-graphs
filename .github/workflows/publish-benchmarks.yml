name: Publish Benchmarks to GitHub Pages

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3

      - name: Setup Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv venv
          # Activate the venv.
          source venv/bin/activate
          # Upgrade pip and install required packages.
          pip install --upgrade pip
          pip install pandas plotly kaleido

      - name: Run scripts to generate HTML files
        run: |
          source venv/bin/activate
          python prompt-comparisons.py --export html
          python metric-perfs.py --export html

      - name: Create timestamped directory and markdown page
        id: prepare_output
        run: |
          # Timestamp: year-month-day-hour:minute.
          TIMESTAMP=$(TZ="America/New_York" date +'%Y-%m-%d-%H:%M')
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV
          
          # Create a display date variable in Eastern Time as: "11:22 PM April 13, 2025 (EDT)"
          DISPLAY_DATE=$(TZ="America/New_York" date +'%I:%M %p %B %d, %Y (%Z)')
          
          # Create the new output directory under vllm-benchmarks.
          mkdir -p vllm-benchmarks/$TIMESTAMP
          
          # Move the generated HTML output files into the new folder.
          mv summary_mean_ttft_ms.html vllm-benchmarks/$TIMESTAMP/
          mv summary_mean_tpot_ms.html vllm-benchmarks/$TIMESTAMP/
          mv summary_mean_itl_ms.html vllm-benchmarks/$TIMESTAMP/
          mv bar_chart_prompts_120.html vllm-benchmarks/$TIMESTAMP/
          mv bar_chart_prompts_1200.html vllm-benchmarks/$TIMESTAMP/
          mv bar_chart_prompts_2000.html vllm-benchmarks/$TIMESTAMP/
          mv bar_chart_prompts_2400.html vllm-benchmarks/$TIMESTAMP/
          mv bar_chart_prompts_3600.html vllm-benchmarks/$TIMESTAMP/
          mv bar_chart_prompts_4200.html vllm-benchmarks/$TIMESTAMP/
          
          # Create the md page with the plotly graphs and timestamp
          echo "# Inference Framework Benchmarks" > vllm-benchmarks/$TIMESTAMP/index.md
          echo "" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "### ${DISPLAY_DATE}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include summary_mean_ttft_ms.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include summary_mean_tpot_ms.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include summary_mean_itl_ms.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include bar_chart_prompts_120.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include bar_chart_prompts_1200.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include bar_chart_prompts_2000.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include bar_chart_prompts_2400.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include bar_chart_prompts_3600.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md
          echo "{% include bar_chart_prompts_4200.html %}" >> vllm-benchmarks/$TIMESTAMP/index.md

      - name: Checkout GitHub Pages repository
        uses: actions/checkout@v3
        with:
          repository: nerdalert/nerdalert.github.io
          token: ${{ secrets.GH_PAGES_TOKEN }}
          path: pages

      - name: Copy benchmark files to GitHub Pages repo
        run: |
          mkdir -p pages/vllm-benchmarks
          cp -R vllm-benchmarks/* pages/vllm-benchmarks/

      - name: Update benchmarks index in GitHub Pages repository
        working-directory: pages
        run: |
          # Run update-index.py from one directory above pages,
          # passing the target directory ("vllm-benchmarks") as an argument.
          python ../update-index.py vllm-benchmarks

      - name: Commit and push changes to GitHub Pages repo
        working-directory: pages
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          # Use the timestamp variable in the commit message.
          git commit -m "Add benchmark results for timestamp $TIMESTAMP" || echo "No changes to commit"
          git push
